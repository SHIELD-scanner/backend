name: Test Pipeline

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    services:
      mongodb:
        image: mongo:8.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Type check with mypy (if available)
        run: |
          pip install mypy || echo "MyPy not available, skipping type check"
          mypy app/ || echo "Type checking completed with warnings"
        continue-on-error: true

      - name: Run unit tests
        env:
          MONGODB_URL: mongodb://localhost:27017
          MONGODB_DB: shield_test
          SENTRY_DSN: ""
        run: |
          pytest tests/unit/ --tb=short

      - name: Run integration tests
        env:
          MONGODB_URL: mongodb://localhost:27017
          MONGODB_DB: shield_test_integration
          SENTRY_DSN: ""
        run: |
          pytest tests/integration/ -v --tb=short

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install bandit safety

      - name: Run security scan with bandit
        run: |
          bandit -r app/ -f json -o bandit-report.json || true
          bandit -r app/ || true
        continue-on-error: true

      - name: Check dependencies for vulnerabilities
        run: |
          safety check --json --output safety-report.json || true
          safety check || true
        continue-on-error: true

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t shield-backend:test .

      - name: Test Docker image
        run: |
          docker run --rm shield-backend:test python -c "import app; print('âœ… App imports successfully')"
